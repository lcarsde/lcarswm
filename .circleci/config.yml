# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:8.0.292

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # install dependencies
      - run: sudo apt-get update
      - run: sudo apt-get install -y openjdk-8-jdk-headless libx11-dev libxpm-dev libxrandr-dev libpango1.0-dev libicu-dev libxml2-dev libtinfo5

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

      # run tests! https://youtrack.jetbrains.com/issue/KT-32608
      - run: gradle nativeTest

      - store_test_results:
          path: build/test-results

      - persist_to_workspace:
          root: ~/repo
          paths:
            - build

  deploy:
    docker:
      - image: cimg/openjdk:8.0.292

    steps:
      - checkout

      - attach_workspace:
          at: ~/repo

      - run: |
          if [[ -f "~/repo/build/processedResources/native/main/etc/lcarsde/autostart" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
